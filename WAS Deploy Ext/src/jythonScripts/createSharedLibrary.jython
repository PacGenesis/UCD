import sys
from java.util import Properties
from java.io import File
from java.io import FileInputStream

props = Properties()
inFile = File(sys.argv[0])
inFileStream = FileInputStream(inFile)
props.load(inFileStream);

cell = props.getProperty("cell");
cluster = props.getProperty("cluster");
node = props.getProperty("node");
server = props.getProperty("server");
name = props.getProperty("name");
classpath = props.getProperty("classpath");
nativepath = props.getProperty("nativepath");
description = props.getProperty("description");

if server.strip() != '' and not server.startswith('${p:'):
    objectId = AdminConfig.getid("/Cell:" + cell + "/" + "Node:" + node + "/" + "Server:" + server + "/");
elif node.strip() != '' and not node.startswith('${p:'):
    objectId = AdminConfig.getid("/Cell:" + cell + "/" + "Node:" + node + "/");
elif cluster.strip() != '' and not cluster.startswith('${p:'):
    objectId = AdminConfig.getid("/Cell:" + cell + "/" + "ServerCluster:" + cluster + "/");
else:
    objectId = AdminConfig.getid("/Cell:" + cell + "/");

library = AdminConfig.getid('/Library:'+name+'/');
if library != '':
    print "Library already exists"
    print "updating classpath and nativepath"
    params = [];
    params.append(['classPath', classpath]);
    params.append(['nativePath', nativepath]);
    params.append(['description', description]);
    AdminConfig.resetAttributes(library, params);
else:
    print "Library with name " + name + " does not exist"
    print "Creating..."
    params = [];
    params.append(['name', name]);
    params.append(['classPath', classpath]);
    params.append(['nativePath', nativepath]);
    params.append(['description', description]);
    AdminConfig.create("Library", objectId, params);


AdminConfig.save();
